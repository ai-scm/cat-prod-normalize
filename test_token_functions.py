#!/usr/bin/env python3
"""
Script de prueba para validar las funciones de extracci√≥n de texto y c√°lculo de tokens
"""

import ast
import sys

def extract_user_text_from_conversation(conversation_text):
    """
    Extrae todos los textos del 'user' de una conversaci√≥n completa.
    """
    if not conversation_text or conversation_text.strip() == "":
        return ""
    
    try:
        conversations = ast.literal_eval(conversation_text)
        
        if not isinstance(conversations, list):
            return ""
        
        user_texts = []
        for conv in conversations:
            if isinstance(conv, dict) and conv.get('from') == 'user' and 'text' in conv:
                user_text = conv['text'].strip()
                if user_text:
                    user_texts.append(user_text)
        
        return " ".join(user_texts)
        
    except (ValueError, SyntaxError, TypeError) as e:
        print(f"‚ö†Ô∏è Error parseando conversaci√≥n para user: {str(e)}")
        return ""

def extract_bot_text_from_conversation(conversation_text):
    """
    Extrae todos los textos del 'bot' de una conversaci√≥n completa.
    """
    if not conversation_text or conversation_text.strip() == "":
        return ""
    
    try:
        conversations = ast.literal_eval(conversation_text)
        
        if not isinstance(conversations, list):
            return ""
        
        bot_texts = []
        for conv in conversations:
            if isinstance(conv, dict) and conv.get('from') == 'bot' and 'text' in conv:
                bot_text = conv['text'].strip()
                if bot_text:
                    bot_texts.append(bot_text)
        
        return " ".join(bot_texts)
        
    except (ValueError, SyntaxError, TypeError) as e:
        print(f"‚ö†Ô∏è Error parseando conversaci√≥n para bot: {str(e)}")
        return ""

def test_extraction():
    """
    Prueba las funciones de extracci√≥n con el ejemplo proporcionado
    """
    # Ejemplo del usuario
    conversation_example = """[{'from': 'user', 'text': 'Buenas tardes', 'timestamp': '2025-08-19T13:26:44Z'}, {'from': 'bot', 'text': 'Buenas tardes. Soy CatIA, el asistente virtual de Catastro Bogot√°. ¬øEn qu√© puedo ayudarte hoy con informaci√≥n sobre los servicios o tr√°mites de Catastro Distrital?', 'timestamp': '2025-08-19T13:26:44Z'}]"""
    
    print("üß™ PRUEBA DE EXTRACCI√ìN DE TEXTO DE CONVERSACIONES")
    print("=" * 60)
    
    print(f"\nüìù Conversaci√≥n de ejemplo:")
    print(f"{conversation_example}")
    
    # Extraer texto del usuario
    user_text = extract_user_text_from_conversation(conversation_example)
    print(f"\nüë§ Texto extra√≠do del USER:")
    print(f"'{user_text}'")
    print(f"Longitud: {len(user_text)} caracteres")
    
    # Extraer texto del bot
    bot_text = extract_bot_text_from_conversation(conversation_example)
    print(f"\nü§ñ Texto extra√≠do del BOT:")
    print(f"'{bot_text}'")
    print(f"Longitud: {len(bot_text)} caracteres")
    
    # Prueba con segundo ejemplo m√°s complejo
    print(f"\n" + "=" * 60)
    print("üß™ PRUEBA CON EJEMPLO COMPLEJO (M√öLTIPLES INTERCAMBIOS)")
    
    complex_example = """[{'from': 'user', 'text': 'Buenas tardes', 'timestamp': '2025-08-19T13:26:44Z'}, {'from': 'bot', 'text': 'Buenas tardes. Soy CatIA, el asistente virtual de Catastro Bogot√°. ¬øEn qu√© puedo ayudarte hoy con informaci√≥n sobre los servicios o tr√°mites de Catastro Distrital?', 'timestamp': '2025-08-19T13:26:44Z'}, {'from': 'user', 'text': 'cancelar cita virtual', 'timestamp': '2025-08-19T13:27:36Z'}, {'from': 'bot', 'text': 'Para cancelar una cita virtual con Catastro Bogot√°, puedes seguir estos pasos:\\n\\n1. Revisa tu correo electr√≥nico: Al momento de agendar tu cita, recibiste un correo de confirmaci√≥n de la cuenta UAECD_CITA_ORIENTACION_POR_VIDEO_LLAMADA@catastrobogota.gov.co   .\\n\\n2. Localiza la opci√≥n "Administrar reserva": En el correo de confirmaci√≥n, encontrar√°s una opci√≥n llamada "Administrar reserva"  .\\n\\n3. Selecciona "Cancelar": Al dar clic en "Administrar reserva", podr√°s elegir la opci√≥n de cancelar tu cita  .\\n\\n4. Confirma la cancelaci√≥n: Sigue las instrucciones que te proporcione el sistema para confirmar la cancelaci√≥n de tu cita.\\n\\nAlternativamente, si tienes problemas para encontrar el correo o acceder a la opci√≥n de cancelaci√≥n, puedes:\\n\\n- Ingresar a la p√°gina web de Catastro Bogot√° (www.catastrobogota.gov.co) y buscar la secci√≥n de "Agenda a un clic" para gestionar tu cita  .\\n\\n- Contactar directamente con el servicio de atenci√≥n al ciudadano de Catastro Bogot√° para solicitar asistencia en la cancelaci√≥n de tu cita.\\n\\nRecuerda que es importante cancelar tu cita con anticipaci√≥n si no podr√°s asistir, para permitir que otros ciudadanos puedan aprovechar ese espacio.', 'timestamp': '2025-08-19T13:27:36Z'}]"""
    
    user_text_complex = extract_user_text_from_conversation(complex_example)
    bot_text_complex = extract_bot_text_from_conversation(complex_example)
    
    print(f"\nüë§ USER (m√∫ltiples mensajes):")
    print(f"'{user_text_complex}'")
    print(f"Longitud: {len(user_text_complex)} caracteres")
    
    print(f"\nü§ñ BOT (m√∫ltiples mensajes):")
    print(f"'{bot_text_complex}'")
    print(f"Longitud: {len(bot_text_complex)} caracteres")
    
    # Simular conteo de tokens (aproximado)
    print(f"\nüî¢ ESTIMACI√ìN DE TOKENS (aproximada, 4 chars = 1 token):")
    print(f"   üë§ USER tokens ‚âà {len(user_text_complex) // 4}")
    print(f"   ü§ñ BOT tokens ‚âà {len(bot_text_complex) // 4}")
    
    print(f"\n‚úÖ PRUEBAS COMPLETADAS - Funciones trabajando correctamente")

if __name__ == "__main__":
    test_extraction()
